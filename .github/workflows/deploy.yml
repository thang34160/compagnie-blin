name: üöÄ Build & Deploy Angular (compagnie-blin) to IONOS

on:
  push:
    branches:
      - main  # D√©ploiement automatique √† chaque push sur la branche principale

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ R√©cup√©ration du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Configuration de Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3Ô∏è‚É£ Mise en cache pour acc√©l√©rer les builds
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4Ô∏è‚É£ Installation propre des d√©pendances
      - name: Install dependencies
        run: npm ci

      # 5Ô∏è‚É£ Build Angular en mode production
      - name: Build Angular app
        run: npm run build -- --configuration production

      # 6Ô∏è‚É£ D√©ploiement automatique vers IONOS via FTP/SFTP
      - name: Deploy to IONOS
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: sftp   # ‚Üê Ton h√©bergement utilise bien SFTP
          port: 22
          local-dir: dist/compagnie-blin/browser   # Le dossier contenant index.html
          server-dir: ./   # La racine de ton espace FTP
          exclude: |
            **/.git*
            **/.github*
            **/node_modules/**
          timeout: 60000   # Allonge le d√©lai en cas de serveur lent
